@mixin create-max($no-of-max) {
  @for $i from 1 through $no-of-max {
    .grid__row--max-#{$i} {
      flex-wrap: wrap;
    }
    .grid__row--max-#{$i} > .grid__column {
      flex-basis: 100% / $i;
    }
    &.grid__row--max-#{$i}.grid__row--strict > .grid__column {
      max-width: 100% / $i;
    }
  }
}

@mixin create-columns($no-of-columns) {
  @for $i from 1 through $no-of-columns {
    @if $i / $no-of-columns * 100 == 25 {
      .column-#{$i},
      .column-fourth {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;
      }
    } @else if $i / $no-of-columns * 100 == 20 {
      .column-#{$i},
      .column-fifth {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;

        &.unpack {
          padding-left: unset;
          padding-right: unset;
        }
      }
    } @else if floor($i / $no-of-columns * 100) == 33 {
      .column-#{$i},
      .column-third {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;
      }
    } @else if $i / $no-of-columns * 100 == 40 {
      .column-#{$i},
      .column-two-fifths {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;

        &.unpack {
          padding-left: unset;
          padding-right: unset;
        }
      }
    } @else if $i / $no-of-columns * 100 == 50 {
      .column-#{$i},
      .column-half {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;
      }
    } @else if $i / $no-of-columns * 100 == 60 {
      .column-#{$i},
      .column-three-fifths {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;
      }
    } @else if floor($i / $no-of-columns * 100) == 66 {
      .column-#{$i},
      .column-two-thirds {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;
      }
    } @else if $i / $no-of-columns * 100 == 75 {
      .column-#{$i},
      .column-three-fourths {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;
      }
    } @else if $i / $no-of-columns * 100 == 80 {
      .column-#{$i},
      .column-four-fifths {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;
      }
    } @else if $i / $no-of-columns * 100 == 100 {
      .column-#{$i},
      .column-full {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;
      }
    } @else {
      .column-#{$i} {
        flex-grow: 0;
        flex-basis: $i / $no-of-columns * 100%;
      }
    }
  }
}

@mixin create-restrictors($no-of-restrictors) {
  @for $i from 1 through $no-of-restrictors {
    @if $i / $no-of-restrictors * 100 == 25 {
      .restrictor-#{$i},
      .restrictor-fourth {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    } @else if $i / $no-of-restrictors * 100 == 20 {
      .restrictor-#{$i},
      .restrictor-fifth {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    } @else if floor($i / $no-of-restrictors * 100) == 33 {
      .restrictor-#{$i},
      .restrictor-third {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    } @else if $i / $no-of-restrictors * 100 == 40 {
      .restrictor-#{$i},
      .restrictor-two-fifths {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    } @else if $i / $no-of-restrictors * 100 == 50 {
      .restrictor-#{$i},
      .restrictor-half {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    } @else if $i / $no-of-restrictors * 100 == 60 {
      .restrictor-#{$i},
      .restrictor-three-fifths {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    } @else if floor($i / $no-of-restrictors * 100) == 66 {
      .restrictor-#{$i},
      .restrictor-two-thirds {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    } @else if $i / $no-of-restrictors * 100 == 75 {
      .restrictor-#{$i},
      .restrictor-three-fourths {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    } @else if $i / $no-of-restrictors * 100 == 80 {
      .restrictor-#{$i},
      .restrictor-four-fifths {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    } @else if $i / $no-of-restrictors * 100 == 100 {
      .restrictor-#{$i},
      .restrictor-full {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    } @else {
      .restrictor-#{$i} {
        max-width: ($i / $no-of-restrictors * $container-width);
      }
    }
  }
}

@mixin create-positions($no-of-positions) {
  @for $i from 1 through ($no-of-positions - 1) {
    @if $i / $no-of-positions * 100 == 25 {
      .position-#{$i},
      .position-fourth {
        margin-left: $i / $no-of-positions * 100%;
      }
    } @else if $i / $no-of-positions * 100 == 20 {
      .position-#{$i},
      .position-fifth {
        margin-left: $i / $no-of-positions * 100%;
      }
    } @else if floor($i / $no-of-positions * 100) == 33 {
      .position-#{$i},
      .position-third {
        margin-left: $i / $no-of-positions * 100%;
      }
    } @else if $i / $no-of-positions * 100 == 40 {
      .position-#{$i},
      .position-two-fifths {
        margin-left: $i / $no-of-positions * 100%;
      }
    } @else if $i / $no-of-positions * 100 == 50 {
      .position-#{$i},
      .position-half {
        margin-left: $i / $no-of-positions * 100%;
      }
    } @else if $i / $no-of-positions * 100 == 60 {
      .position-#{$i},
      .position-three-fifths {
        margin-left: $i / $no-of-positions * 100%;
      }
    } @else if floor($i / $no-of-positions * 100) == 66 {
      .position-#{$i},
      .position-two-thirds {
        margin-left: $i / $no-of-positions * 100%;
      }
    } @else if $i / $no-of-positions * 100 == 75 {
      .position-#{$i},
      .position-three-fourths {
        margin-left: $i / $no-of-positions * 100%;
      }
    } @else if $i / $no-of-positions * 100 == 80 {
      .position-#{$i},
      .position-four-fifths {
        margin-left: $i / $no-of-positions * 100%;
      }
    } @else {
      .position-#{$i} {
        margin-left: $i / $no-of-positions * 100%;
      }
    }
  }
}

@mixin create-media-query($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}
